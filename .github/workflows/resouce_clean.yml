name: Automatic Resource Cleanup

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:

      - name: Get PRs with test-label
        run: |
          label_name="test-label"
          PRs=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/repos/skikkh/wai-san/pulls?state=open&labels=$label_name")
          echo "$PRs" | jq -r 'select(.labels[].name == $label_name) | .number' --arg label_name "$label_name"

      - name: Get Created At for Each PR
        run: |
          label_name="test-label"
          PRs=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/repos/skikkh/wai-san/pulls?state=open&labels=$label_name")
          PR_numbers=$(echo "$PRs" | jq -r 'select(.labels[].name == $label_name) | .number' --arg label_name "$label_name")

          for PR_number in $PR_numbers; do
            created_at=$(gh api -H "Accept: application/vnd.github+json" "/repos/skikkh/wai-san/pulls/$PR_number" | jq -r '.created_at')
            echo "PR #$PR_number was created at $created_at"
          done

      - name: Check if label is old enough for deletion
        run: |
          label_name="test-label"  # ここにラベルの名前を指定
          label_timestamp=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/skikkh/wai-san/issues/1/comments | jq -r '.[] | select(.body | contains("test-label")) | .created_at')
          echo label_timestamp: $label_timestamp
          label_timestamp_seconds=$(date -d "$label_timestamp" +"%s")
          echo label_timestamp_seconds: $label_timestamp_seconds
          current_time_seconds=$(date +"%s")
          time_difference=$((current_time_seconds - label_timestamp_seconds))
          if [ $time_difference -ge 1800 ]; then  # 1800秒（30分）以上経過したら削除
            echo "Label is old enough for deletion"
            # リソースの削除手順をここに追加
          else
            echo "Label is not old enough for deletion"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
